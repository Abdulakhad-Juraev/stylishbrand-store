<?php

namespace common\modules\user\models;

use common\models\query\UserQuery;
use soft\db\ActiveQuery;
use soft\db\ActiveRecord;
use Yii;
use yii\base\Exception;

/**
 * This is the model class for table "user_device".
 *
 * @property int $id
 * @property int|null $user_id
 * @property string $device_id [varcha(255)] Идентификатор устройства
 * @property string $device_name [varcha(255)] Название устройства
 * @property int|null $status
 * @property int|null $created_at
 * @property int|null $updated_at
 * @property string $token [varchar(1024)]
 * @property string $firebase_token [varchar(1024)]
 *
 * @property-read \common\models\User $user
 *
 */
class UserDevice extends ActiveRecord
{

    //<editor-fold desc="Parent" defaultstate="collapsed">

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'user_device';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id'], 'integer'],
            [['device_name', 'device_id', 'firebase_token', 'token'], 'string'],
            [['user_id', 'device_id'], 'unique', 'targetAttribute' => ['user_id', 'device_id']],
            ['status', 'required'],
            ['status', 'in', 'range' => [self::STATUS_ACTIVE, self::STATUS_INACTIVE]],
            ['status', 'default', 'value' => self::STATUS_ACTIVE],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'yii\behaviors\TimestampBehavior',
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function labels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'Foydalanuvchi',
            'device_id' => 'Qurilma ID',
            'device_name' => 'Qurilma nomi',
            'token' => 'Token',
            'firebase_token' => 'FireBase token',
            'status' => 'Holati',
        ];
    }

    /**
     * @return UserQuery|ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::class, ['id' => 'user_id']);
    }

    //</editor-fold>

    /**
     * @throws Exception
     */
    public function generateToken()
    {
        $this->token = ':' . Yii::$app->security->generateRandomString(60);
    }

    /**
     * @param $insert
     * @param $changedAttributes
     * @return false|int|void
     */
    public function afterSave($insert, $changedAttributes)
    {
        $token = explode(':', $this->token);

        if (!is_numeric($token[0])) {
            $this->token = $this->id . $this->token;
            return $this->save(false);
        }
        return parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
